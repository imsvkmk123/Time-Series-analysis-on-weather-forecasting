# -*- coding: utf-8 -*-
"""WeatherPrediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/0BxiY3rvPVXATN1B2blBaSlZyMEhicVQ1N09IUERaOVVBcllr
"""

import pandas as pd
from google.colab import files
uploaded = files.upload()

df = pd.read_csv('weather.csv')
df.head()

df.corr()[['MinTemp']].sort_values('MinTemp', ascending=False)

predictors=['MinTemp','MaxTemp','Rainfall',
            'Sunshine','WindGustDir',
            'WindDir9am','WindDir3pm',
            'Humidity9am','Humidity3pm','Pressure9am',
            'Pressure3pm','Cloud9am','Cloud3pm','Temp9am',
            'Temp3pm','RainToday','RISK_MM','RainTomorrow']
df2=df[['MinTemp']+predictors]
df2.head()

X=df[predictors]
X.head()

i= ['MinTemp']
y= df[i]
y.head(2)
print (y)

import matplotlib
import matplotlib.pyplot as plt
import numpy as np
#%matplotlib inline
plt.rcParams['figure.figsize'] = [16,16]
plt.show()

fig, axes = plt.subplots(nrows=6, ncols=3, sharey=True)
arr = np.array(predictors).reshape(6,3)

#finding relashionship between feature and target visually
for row, col_arr in enumerate(arr): 
  for col, feature in enumerate(col_arr):
    axes[row, col].scatter(df2[feature], df2['MinTemp'])
    if col == 0:
      axes[row, col].set(xlabel=feature, ylabel='MinTemp')
    else:
        axes[row, col].set(xlabel=feature)
        plt.show()

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test(X,y,test_size=0.1,random_state=12)

from sklearn import linear_model
#creating model
model=linear_model.LinearRegression()

X_train.head()

model.fit(X_train,y_train)
y_pred=model.predict(X_test)

y_pred

y_test.head()

from sklearn.metrics import mean_squred_error,r2_score
print(mean_squred_error(y_test,y_pred))
print(r2_score(y_test,y_pred))

l=[i for i in range(len(y_pred))]
plt.plot(l,y_pred,"r--")
plt.scatter(l,y_test)
plt.show()

